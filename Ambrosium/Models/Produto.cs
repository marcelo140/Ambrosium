//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ambrosium.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Produto
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Produto()
        {
            this.Avaliacao = new HashSet<Avaliacao>();
            this.Sugestao_Produto = new HashSet<Sugestao_Produto>();
            this.Ingrediente = new HashSet<Ingrediente>();
        }
    
        public int id { get; set; }
        public string nome { get; set; }
        public string imagem { get; set; }
        public int estabelecimento { get; set; }
        public string regime { get; set; }
        public byte ativo { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Avaliacao> Avaliacao { get; set; }
        public virtual Estabelecimento Estabelecimento1 { get; set; }
        public virtual Regime Regime1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Sugestao_Produto> Sugestao_Produto { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Ingrediente> Ingrediente { get; set; }

        public decimal AverageRating()
        {
            float sum =0, length=0;

            foreach(Avaliacao a in Avaliacao)
            {
                sum += a.rating;
                length++;
            }

            if (length == 0) return 0;

            return (decimal) (sum / length);
        }
    }
}
